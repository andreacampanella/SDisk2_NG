Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
                              FAT32.o (__udivmodhi4)
/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
                              FAT32.o (__udivmodsi4)
/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o (exit)
/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
                              oled.o (__do_clear_bss)
/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
                              FAT32.o (__umulhisi3)
/usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
                              FAT32.o (__muluhisi3)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strcpy_P.o)
                              main.o (strcpy_P)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strncmp_P.o)
                              main.o (strncmp_P)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
                              main.o (memcmp)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strlcpy.o)
                              main.o (strlcpy)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
                              oled.o (__itoa_ncheck)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ltoa_ncheck.o)
                              oled.o (__ltoa_ncheck)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ultoa_ncheck.o)
                              /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ltoa_ncheck.o) (__ultoa_common)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ultoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

sectors             0x4               main.o
FAT_firstDataSector
                    0x4               FAT32.o
FAT_partitionType   0x1               FAT32.o
FAT_sectorOfRootDirectory
                    0x4               FAT32.o
buffNum             0x1               main.o
shift               0x1               SD_routines.o
tracks              0x4               main.o
old_trk             0x1               main.o
ssd1306_inv         0x1               oled.o
long_cluster        0x2               main.o
FAT_sectorOfCurrentDirectory
                    0x4               FAT32.o
formatting          0x1               main.o
fast                0x1               SPI_routines.o
writeData           0x578             main.o
SD_speed            0x1               SD_routines.o
FAT_bytesPerSector  0x2               FAT32.o
errorCode           0x1               SPI_routines.o
FAT_offset          0x4               FAT32.o
bitbyte             0x2               main.o
ssd1306_over        0x1               oled.o
ssd1306_offset      0x1               oled.o
lastBlockRead       0x4               SD_routines.o
ssd1306_contr       0x1               oled.o
sector              0x1               main.o
buffer              0x2               SD_routines.o
ft                  0x4               main.o
flip_buttons        0x1               main.o
magState            0x1               main.o
long_sector         0x2               main.o
SDHC_flag           0x1               SD_routines.o
files_id            0x2               main.o
count               0x1               SD_routines.o
FAT_sectorsPerCluster
                    0x1               FAT32.o
SD_version          0x1               SD_routines.o
ph_track            0x1               main.o
prepare             0x1               main.o
oled_contrast       0x1               oled.o
writePtr            0x2               main.o
FAT_sectorsPerClusterBitShift
                    0x1               FAT32.o
res                 0x1               SD_routines.o
fatNic              0x28              main.o
protect             0x1               main.o
readPulse           0x1               main.o
ch                  0x1               SD_routines.o
ssd1306_under       0x1               oled.o
inited              0x1               main.o
trk                 0x1               main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000008000 xr
data             0x0000000000800100 0x0000000000000800 rw !x
eeprom           0x0000000000810000 0x0000000000000400 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
LOAD oled.o
LOAD SPI_routines.o
LOAD SD_routines.o
LOAD FAT32.o
LOAD main.o
LOAD sub.o
START GROUP
LOAD /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libatmega328p.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x0000000000800100]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x0000000000008000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                [0x0000000000000800]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x0000000000000400]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x3ed8
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
 .progmem.data  0x0000000000000068      0x3a6 oled.o
                0x0000000000000068                LOGO
                0x00000000000001da                ICONS
                0x000000000000022e                ASCII
 .progmem.data  0x000000000000040e      0x204 main.o
                0x0000000000000412                stepper_table
                0x0000000000000416                CFG
                0x0000000000000422                SDOUT
                0x0000000000000431                FAT1
                0x0000000000000437                FAT3
                0x000000000000043d                PART
                0x0000000000000444                ERMC
                0x000000000000044b                ERM7
                0x000000000000045a                ERM6
                0x0000000000000469                ERM5
                0x0000000000000478                ERM4
                0x0000000000000487                ERM3
                0x0000000000000496                ERM2
                0x00000000000004a5                ERM1
                0x00000000000004b4                ERR
                0x00000000000004be                MSSD
                0x00000000000004cd                MSHC
                0x00000000000004dc                MSGD
                0x00000000000004f2                MSG8
                0x0000000000000508                MSGC
                0x0000000000000517                MSG7
                0x000000000000052d                TRAK
                0x0000000000000535                DLAY
                0x000000000000054b                CONT
                0x0000000000000561                VALUE
                0x000000000000056a                SET3
                0x0000000000000580                SET2
                0x0000000000000596                SET1
                0x00000000000005ac                EMP
                0x00000000000005c2                SETUP
                0x00000000000005d8                NIC
                0x00000000000005ee                VERSION
                0x0000000000000603                SPLASH1
                0x0000000000000612                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000612                __ctors_start = .
 *(.ctors)
                0x0000000000000612                __ctors_end = .
                0x0000000000000612                __dtors_start = .
 *(.dtors)
                0x0000000000000612                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000612        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
                0x0000000000000612                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000612        0xc /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000061e       0x16 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
                0x000000000000061e                __do_copy_data
 .init4         0x0000000000000634       0x10 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000634                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000644        0x8 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
 *(.init9)
 *(.text)
 .text          0x000000000000064c        0x4 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
                0x000000000000064c                __vector_22
                0x000000000000064c                __vector_24
                0x000000000000064c                __vector_12
                0x000000000000064c                __bad_interrupt
                0x000000000000064c                __vector_6
                0x000000000000064c                __vector_3
                0x000000000000064c                __vector_23
                0x000000000000064c                __vector_25
                0x000000000000064c                __vector_11
                0x000000000000064c                __vector_13
                0x000000000000064c                __vector_17
                0x000000000000064c                __vector_19
                0x000000000000064c                __vector_7
                0x000000000000064c                __vector_5
                0x000000000000064c                __vector_4
                0x000000000000064c                __vector_9
                0x000000000000064c                __vector_2
                0x000000000000064c                __vector_21
                0x000000000000064c                __vector_15
                0x000000000000064c                __vector_8
                0x000000000000064c                __vector_14
                0x000000000000064c                __vector_10
                0x000000000000064c                __vector_18
                0x000000000000064c                __vector_20
 .text          0x0000000000000650      0x5ac oled.o
                0x0000000000000650                ass_i2c_delay_half
                0x000000000000065a                ass_i2c_wait_scl_high
                0x0000000000000664                i2c_init
                0x0000000000000680                i2c_start
                0x0000000000000690                i2c_rep_start
                0x00000000000006ac                i2c_start_wait
                0x00000000000006ca                ass_i2c_stop
                0x00000000000006de                ass_i2c_write
                0x0000000000000742                i2c_read
                0x000000000000079e                ssd1306_command
                0x00000000000007ba                ssd1306_data
                0x00000000000007d6                ssd1306_contrast
                0x00000000000007f2                ssd1306_char
                0x0000000000000896                ssd1306_string
                0x00000000000008ae                ssd1306_inverse
                0x00000000000008be                ssd1306_underline
                0x00000000000008ce                ssd1306_overline
                0x00000000000008de                ssd1306_gotoxy
                0x0000000000000926                ssd1306_clear
                0x0000000000000956                ssd1306_screenUp
                0x000000000000096a                ssd1306_init
                0x0000000000000a5c                ssd1306_screenDown
                0x0000000000000a70                ssd1306_put_i
                0x0000000000000aaa                ssd1306_put_l
                0x0000000000000ae4                ssd1306_put_p
                0x0000000000000b00                ssd1306_icon
                0x0000000000000ba2                logo
 .text          0x0000000000000bfc      0x196 SPI_routines.o
                0x0000000000000bfc                SPI_init
                0x0000000000000c0a                SPI_send_byte_fast
                0x0000000000000c32                SPI_read_byte_fast
                0x0000000000000c6a                SPI_clock_pulse_fast
                0x0000000000000c74                SPI_wait5
                0x0000000000000c84                SPI_send_byte_slow
                0x0000000000000ce6                SPI_transmit
                0x0000000000000cfc                SPI_read_byte_slow
                0x0000000000000d5c                SPI_receive
                0x0000000000000d6c                SPI_clock_pulse_slow
                0x0000000000000d84                SPI_fast
                0x0000000000000d8c                SPI_slow
 .text          0x0000000000000d92      0x446 SD_routines.o
                0x0000000000000d92                SD_getRespFast
                0x0000000000000d9c                SD_cmdFast
                0x0000000000000e0a                SD_CMD17Special
                0x0000000000000e26                SD_sendCommand
                0x0000000000000efa                SD_readSingleBlock
                0x0000000000000fb2                SD_writeSingleBlock
                0x000000000000104c                SD_setBlockSize
                0x0000000000001056                SD_init
                0x00000000000011c0                SD_led_on
                0x00000000000011c6                SD_led_off
                0x00000000000011ca                SD_wait_finish
 .text          0x00000000000011d8      0x5d8 FAT32.o
                0x00000000000011d8                getNextCluster
                0x000000000000129c                allocEmptyCluster
                0x00000000000013b0                anyFile
                0x00000000000014e4                cd
                0x0000000000001590                FAT_init
                0x0000000000001772                validFile
                0x00000000000017a8                getFile
 .text          0x00000000000017b0     0x21b2 main.o
                0x00000000000017b0                display_sd_ejected
                0x00000000000017da                init
                0x0000000000001884                icons
                0x00000000000018de                is_a_nic
                0x000000000000190a                is_a_dir
                0x000000000000192a                create_config_file
                0x00000000000019e0                writeBackSub2
                0x0000000000001bf4                writeBackSub
                0x0000000000001c8a                cancelRead
                0x0000000000001cca                writeBack
                0x0000000000001da8                buffClear
                0x0000000000001df2                init_sd
                0x0000000000002012                mount_nic_image
                0x00000000000022f0                swap_nic
                0x000000000000242e                configButtons
                0x0000000000002436                set_contrast
                0x000000000000287e                set_speed
                0x0000000000002c10                setup
                0x0000000000002eaa                select_nic
                0x00000000000033c6                find_previous_nic
                0x0000000000003598                verify_status
 .text          0x0000000000003962      0x182 sub.o
                0x0000000000003988                __vector_16
                0x0000000000003a1c                __vector_1
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strcpy_P.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strncmp_P.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strlcpy.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ltoa_ncheck.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ultoa_ncheck.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
 .text          0x0000000000003ae4        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strrev.o)
                0x0000000000003ae4                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000003ae4      0x218 main.o
                0x0000000000003ae4                main
 .text.libgcc.mul
                0x0000000000003cfc        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000003cfc       0x28 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000003cfc                __udivmodhi4
 .text.libgcc   0x0000000000003d24        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000003d24        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000003d24        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000003d24        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000003d24        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000003d24        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000003d24       0x44 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
                0x0000000000003d24                __udivmodsi4
 .text.libgcc   0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000003d68        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000003d68       0x1e /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
                0x0000000000003d68                __umulhisi3
 .text.libgcc.div
                0x0000000000003d86        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000003d86        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000003d86        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000003d86        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000003d86        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000003d86        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.mul
                0x0000000000003d86       0x16 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
                0x0000000000003d86                __muluhisi3
 .text.libgcc.div
                0x0000000000003d9c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc   0x0000000000003d9c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.prologue
                0x0000000000003d9c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.builtins
                0x0000000000003d9c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.fmul
                0x0000000000003d9c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
 .text.libgcc.fixed
                0x0000000000003d9c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
 .text.avr-libc
                0x0000000000003d9c        0xe /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strcpy_P.o)
                0x0000000000003d9c                strcpy_P
 .text.avr-libc
                0x0000000000003daa       0x1c /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strncmp_P.o)
                0x0000000000003daa                strncmp_P
 .text.avr-libc
                0x0000000000003dc6       0x1a /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
                0x0000000000003dc6                memcmp
 .text.avr-libc
                0x0000000000003de0       0x28 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strlcpy.o)
                0x0000000000003de0                strlcpy
 .text.avr-libc
                0x0000000000003e08       0x16 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
                0x0000000000003e08                __itoa_ncheck
 .text.avr-libc
                0x0000000000003e1e       0x1e /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ltoa_ncheck.o)
                0x0000000000003e1e                __ltoa_ncheck
 .text.avr-libc
                0x0000000000003e3c       0x44 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ultoa_ncheck.o)
                0x0000000000003e3c                __ultoa_ncheck
                0x0000000000003e3e                __ultoa_common
 .text.avr-libc
                0x0000000000003e80       0x34 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
                0x0000000000003e80                __utoa_ncheck
                0x0000000000003e82                __utoa_common
 .text.avr-libc
                0x0000000000003eb4       0x20 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strrev.o)
                0x0000000000003eb4                strrev
                0x0000000000003ed4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000003ed4        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
                0x0000000000003ed4                exit
                0x0000000000003ed4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000003ed4        0x4 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000003ed8                _etext = .

.data           0x0000000000800100        0x6 load address 0x0000000000003ed8
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
 .data          0x0000000000800100        0x0 oled.o
 .data          0x0000000000800100        0x0 SPI_routines.o
 .data          0x0000000000800100        0x0 SD_routines.o
 .data          0x0000000000800100        0x0 FAT32.o
 .data          0x0000000000800100        0x2 main.o
                0x0000000000800100                id_of_config_file
 .data          0x0000000000800102        0x0 sub.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strcpy_P.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strncmp_P.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strlcpy.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ltoa_ncheck.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ultoa_ncheck.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 .rodata        0x0000000000800102        0x1 main.o
                0x0000000000800102                volume
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800103        0x2 main.o
 *(.gnu.linkonce.r*)
                0x0000000000800106                . = ALIGN (0x2)
 *fill*         0x0000000000800105        0x1 
                0x0000000000800106                _edata = .
                0x0000000000800106                PROVIDE (__data_end, .)

.bss            0x0000000000800106      0x5f2
                0x0000000000800106                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800106        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o
 .bss           0x0000000000800106        0x0 oled.o
 .bss           0x0000000000800106        0x0 SPI_routines.o
 .bss           0x0000000000800106        0x0 SD_routines.o
 .bss           0x0000000000800106        0x0 FAT32.o
 .bss           0x0000000000800106        0x6 main.o
                0x0000000000800106                selected_file_id
                0x0000000000800108                nfiles
 .bss           0x000000000080010c        0x0 sub.o
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_umulhisi3.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/avr5/libgcc.a(_muluhisi3.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strcpy_P.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strncmp_P.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(memcmp.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strlcpy.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(itoa_ncheck.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ltoa_ncheck.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(ultoa_ncheck.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(utoa_ncheck.o)
 .bss           0x000000000080010c        0x0 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080010c        0x6 oled.o
                0x000000000080010c                ssd1306_inv
                0x000000000080010d                ssd1306_over
                0x000000000080010e                ssd1306_offset
                0x000000000080010f                ssd1306_contr
                0x0000000000800110                oled_contrast
                0x0000000000800111                ssd1306_under
 COMMON         0x0000000000800112        0x2 SPI_routines.o
                0x0000000000800112                fast
                0x0000000000800113                errorCode
 COMMON         0x0000000000800114        0xd SD_routines.o
                0x0000000000800114                shift
                0x0000000000800115                SD_speed
                0x0000000000800116                lastBlockRead
                0x000000000080011a                buffer
                0x000000000080011c                SDHC_flag
                0x000000000080011d                count
                0x000000000080011e                SD_version
                0x000000000080011f                res
                0x0000000000800120                ch
 COMMON         0x0000000000800121       0x15 FAT32.o
                0x0000000000800121                FAT_firstDataSector
                0x0000000000800125                FAT_partitionType
                0x0000000000800126                FAT_sectorOfRootDirectory
                0x000000000080012a                FAT_sectorOfCurrentDirectory
                0x000000000080012e                FAT_bytesPerSector
                0x0000000000800130                FAT_offset
                0x0000000000800134                FAT_sectorsPerCluster
                0x0000000000800135                FAT_sectorsPerClusterBitShift
 COMMON         0x0000000000800136      0x5c2 main.o
                0x0000000000800136                sectors
                0x000000000080013a                buffNum
                0x000000000080013b                tracks
                0x000000000080013f                old_trk
                0x0000000000800140                long_cluster
                0x0000000000800142                formatting
                0x0000000000800143                writeData
                0x00000000008006bb                bitbyte
                0x00000000008006bd                sector
                0x00000000008006be                ft
                0x00000000008006c2                flip_buttons
                0x00000000008006c3                magState
                0x00000000008006c4                long_sector
                0x00000000008006c6                files_id
                0x00000000008006c8                ph_track
                0x00000000008006c9                prepare
                0x00000000008006ca                writePtr
                0x00000000008006cc                fatNic
                0x00000000008006f4                protect
                0x00000000008006f5                readPulse
                0x00000000008006f6                inited
                0x00000000008006f7                trk
                0x00000000008006f8                PROVIDE (__bss_end, .)
                0x0000000000003ed8                __data_load_start = LOADADDR (.data)
                0x0000000000003ede                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008006f8        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x00000000008006f8                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 oled.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 SPI_routines.o
 .comment       0x0000000000000011       0x12 SD_routines.o
 .comment       0x0000000000000011       0x12 FAT32.o
 .comment       0x0000000000000011       0x12 main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x5f4
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x5f4 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.debug_abbrev   0x0000000000000000      0x5a2
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x5a2 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x208
 *(.debug_str)
 .debug_str     0x0000000000000000      0x208 /usr/lib/gcc/avr/7.3.0/../../../avr/lib/avr5/crtatmega328p.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(sdisk2_oled.elf elf32-avr)
LOAD linker stubs
